I would like you to analyze historical market data to create an Optimal Investment Day Calendar that identifies the best day of the week to invest in [SMH, SPY, QTUM, SLV, GLD] for each month of the year.

Historical data is available for all the mentioned symbols in the attachment.

Instructions to analyze the data:
1. For each month (January through December), determine which day of the week (Monday-Friday) historically has the highest probability of negative returns (price drops). These are optimal "discount buying" days.
2. Calculate the probability percentage for each recommended day.
3. Check if any technical indicator is impacting the pattern like:
    - RSI
    - MACD
    - EMAs
    - BBands
    - Moving Averages
    - Stochastic Oscillator
    - SMA (Simple Moving Average)
    - OBV (On-Balance Volume)
    - Volume
    - Volatility
    - Any other indicator you think is relevant
4. Identify months with particularly strong or weak patterns.
5. For each recommended day, indicate the confidence level (High/Medium/Low) based on:
   - Sample size (take maximum available samples for each month-day combination for improved accuracy)
   - Consistency of the pattern
   - Agreement across recent vs older data
6. Optimal Day of the week could be different for each symbol, so analyze each ticker separately.
7. Consider data from the last 1 years for better sampling, but prioritize more recent data, and display the results side by side if you cannot see a clear pattern.
8. Correlate each ticker with SPY (SnP 500) to get the broader market view of that particular day.
9. Remove periods with adverse effects from the data, to remove anomalies, few of them include but not limited to:
    - COVID-19 Circuit breaker days
    - COVID-19 extreme volatility period
    - Christmas Eve crash
    - Brexit vote
    - Flash crash
    - SVB collapse
    - VIX spike
    - GameStop volatility
    - Other extreme events
    - Extreme volatility days which are very abnormal compared to the rest of the data.
10. use less comments to save the message limit.
11. Ensure consistent confidence-level categorization based on both probability and sample size.
12. Use low, medium, strong confidence level tags.
    - Strong: Probability ≥ 70%, Sample size ≥ 20, consistency across recent and older data.
    - Medium: Probability 60–69%, Sample size ≥ 15, reasonably consistent.
    - Low: Probability < 60%, Sample size ≥ 12, limited consistency or sample.
13. As a backup strategy, use relevant machine learning models to predict the optimal day of the week for each month using models like below, but not limited to.
    - Random Forest
    - Gradient Boosting (XGBoost)
    - Logistic Regression
    - Support Vector Machine (SVM)
14. Back test the output generated by models data to check the accuracy of the model, if results are not promising, try with a different model until you attain high accuracy in results before showing the results to me.
15. Feel free to add any more analysis that you think is relevant to the project.
16. Use Python for your analysis.
17. Is it worth considering the day of the week for the month of the year? Or if I invest certain amount daily, would that be more profitable? If you think it is worth considering, then provide the analysis for that as well.
18. If there are multiple days of week with similar patterns for each ticker in a month, then show top two days of the week with similar patterns.
19. Also a project which
20. capital investment for daily investment analysis and optimal day of the week analysis, should show profit/loss, difference, recommendation  for each ticker for each month for each day of the week.

Please present the results as:
1. A visual HTML calendar dashboard script which should include:
    - clean and clear visualization of the data.
    - showing the optimal investment day of week for each month
    - color-coded by probability percentage (stronger patterns in deeper green)
    - do a side by side comparison for other years and recent years data if different patterns observed.
    - show low, medium, strong confidence level tags,confidence percentages, and sample size.
    - show the technical indicators that are impacting the pattern in the dashboard.
    - Show the machine learning model used, back testing accuracy if applicable.
    - clearer consolidation of tickers by day of the week, essentially a different view of the calendar data that makes it easier to track which tickers have the same optimal investment day for each month.
    - If providing data for multiple days of the week, the weeks should be sorted.
    - Separate tabs for Historical data analysis, Correlation Analysis, Machine Learning Model, Back-testing, and daily investment analysis if applicable.
    - No separate tabs for each ticker, all tickers should be consolidated in a single tab, each ticker should have a separate icon with the ticker name.
    - The dashboard should be interactive, allowing me to filter by ticker, month, and day of the week.
    - A Legend should be provided to explain the color codes and confidence levels.
    - A capital investment analysis for each ticker, if daily investment is more profitable than the optimal day of the week from a specified lookback period. For e.g if I invest $100 weekly, would that be more profitable than investing on the optimal day of the week and daily investment analysis should be provided in the dashboard.
    - should not miss any data in the dashboard, all the data should be presented in the dashboard, revalidate the data before presenting it in the dashboard.
    - Ticker consolidation tab with a separate icon for each ticker, should look like a calendar with the ticker name and the optimal day of the week for each month. and ticker name should be displayed in the icon with color-coding to easily identify the ticker.
    - Historical analysis tab should be present with the optimal day of the week for each month for each ticker, and the confidence level should be displayed in the tab.
    - Machine learning tab with the machine learning model used, backtesting accuracy, and optimal day of the week for each month for each ticker.
    - Correlation analysis tab with the correlation of each ticker with SPY for each month for each ticker.
    - Backtesting tab with the backtesting accuracy for each ticker.
    - Daily investment analysis tab with the capital investment analysis for each ticker.
2. Compile and generate a working python script to generate above html dashboard with below features additional to above mentioned features in the dashboard requirements. Parameterize in main function to accept below parameters:
    - Input, output directory
    - boolean to analyze all the tickers in input data path or specific tickers.
    - Multiple Look back period for the analysis, and generate the dashboard for each lookback period.
    - boolean to include machine learning model analysis or not.
    - A correlation analysis for each lookback period after generating all the dashboards if multiple lookback periods are provided.
    - Backtesting analysis with all the machine learning models used, include any other models that you think are relevant.
    - capital investment input for daily investment analysis and optimal day of the week analysis (should support multiple days of a week if multiple days of the week are recommended for each month for each ticker).
    - a separate capital investment dollar amount for each ticker for daily investment analysis and optimal day of the week analysis (I will provide daily investment amount input, it should be calculated for weekly investment amount automatically for optimal week analysis).
3. Notes on any limitations of this approach
4. Mention excluded anomalous periods as a note.
5. The data which you calculate with all the technical indicators and machine learning models should be provided for me to be able to download in a file.
6. Provide a detailed explanation of the analysis and the results in a separate document.

Context: I'm setting up automated investments in my brokerage account and can configure specific days of the week for each month, but need data-driven guidance on optimal timing. Before you even start analysis let me if you require any more that that makes you feel confident and help in doing a powerful and robust analysis.



I'm working on an Optimal Investment Day Calendar Python script that analyzes market data (SPY, SMH, SLV, GLD, QTUM) to identify optimal buying days.
I am attaching py script, I want to make below enhancements:
1. XGBoost - Typically outperforms Random Forest for time series data with *~5-15% accuracy improvement
2. LSTM Neural Networks - Can identify complex temporal patterns (*~10-20% potential improvement*)
3. CatBoost - Handles categorical features (like day of week) particularly well
4. Ensemble Methods - Combining RandomForest, GradientBoosting and LogisticRegression could increase accuracy by ~7%
5. deep learning approaches that could enhance accuracy

Instructions:
1. All the enhancements should be presented in one script for me to copy and paste.
2. Do not miss to include any of the enhancements.
3. Always continue to override the message limit warning message.